//
//  HomeInteractor.swift
//  Movies
//
//  Created by Burak Çokyıldırım on 22.11.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Burak Cokyildirim

import Foundation

class HomeInteractor: BaseInteractor {
    
    // MARK: - Dependencies
    
    var presenter: HomePresenterInteractorProtocol!
    
    // MARK: - Initialization
    
    override init(networkService: NetworkService? = nil, firebaseService: FirebaseService? = nil) {
        super.init(networkService: networkService, firebaseService: firebaseService)
    }
    
    // MARK: - Business Logic

}

// MARK: - Extensions

// MARK: - Protocols Implemantations

extension HomeInteractor: HomeInteractorProtocol {
    
    func fetchMovies(_ searchText: String) {
        let url = NetworkConstants.omdb.search + searchText
        
        networkService.getJSON(url: url) { (json) in
            
            if !json["Response"].boolValue {
                let errorMessage = json["Error"].stringValue
                let error = ErrorModel(errorMessage: errorMessage, errorType: .error)
                self.presenter.handleAndShowError(errorModel: error)
                return
            }
            
            var searchResult: [Movie] = []
            
            for m in json["Search"].arrayValue {
                searchResult.append(Movie(json: m))
            }
            
            self.presenter.handleSearchResult(searchResult)
            
        } failure: { (error) in
            self.presenter.handleAndShowError(errorModel: error)
        }
    }
}
