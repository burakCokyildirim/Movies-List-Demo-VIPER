//
//  HomePresenter.swift
//  Movies
//
//  Created by Burak Çokyıldırım on 22.11.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Burak Cokyildirim
//

import Foundation

class HomePresenter: BasePresenter {
    
    // MARK: - Dependencies
    
    fileprivate var viewController: HomeViewControllerProtocol!
    fileprivate var interactor: HomeInteractorProtocol!
    fileprivate var delegate: HomePresenterDelegateProtocol?
    
    // MARK: - Extras
    
    // MARK: - Properties
    
    // MARK: - Initialization
    
    init(viewController: HomeViewControllerProtocol, interactor: HomeInteractorProtocol, delegate: HomePresenterDelegateProtocol?, extras: Any?) {
        self.viewController = viewController
        self.interactor = interactor
        self.delegate = delegate
        
        // Store extras
    }
    
    override func handleAndShowError(errorModel: ErrorModel) {
        
        viewController.stopLoading()
        
        switch errorModel.errorMessage {
        case "Movie not found!":
            viewController.showSearchResult(.noResult, [])
        case "Too many results.":
            viewController.showSearchResult(.keepTyping, [])
        default:
            viewController.showError(errorModel: errorModel, completionHandler: nil)
        }
    }
    
    // MARK: - Business Logic
    
}

// MARK: - Extensions

// MARK: - Protocols Implemantations

// MARK: View Protocol

extension HomePresenter: HomePresenterViewProtocol {
    
    func searchMovies(_ searchText: String) {
        
        let searchText = searchText.trimmingCharacters(in: .whitespaces)
        
        if searchText.count < 1 {
            viewController.showSearchResult(.typeSomething, [])
            return
        }
        
        if let searchText = searchText.addingPercentEncoding(withAllowedCharacters: .alphanumerics) {
            viewController.startLoading()
            interactor.fetchMovies(searchText)
        }
    }
}

// MARK: Interactor Protocol

extension HomePresenter: HomePresenterInteractorProtocol {
    
    func handleSearchResult(_ result: [Movie]) {
        viewController.stopLoading()
        viewController.showSearchResult(.done, result)
    }
}

// MARK: Delegate Protocol

