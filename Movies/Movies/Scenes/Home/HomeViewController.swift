//
//  HomeViewController.swift
//  Movies
//
//  Created by Burak Çokyıldırım on 22.11.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Burak Cokyildirim
//

import UIKit

class HomeViewController: BaseViewController {
    
    // MARK: - Outlets
    
    @IBOutlet weak var tableView: UITableView!
    
    // MARK: - Dependencies
    
    var presenter: HomePresenterViewProtocol!
    
    // MARK: - Properties
    
    let searchController = UISearchController(searchResultsController: nil)
    var movies: [Movie] = []
    var messageType: MessageType = .typeSomething
    
    // MARK: - Lifecycle
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
    }
    
    // MARK: - Configure
    
    override func configureView() {
        super.configureView()
        
        barTitle = "home_view_controller.title".localized
        
        tableView.delegate = self
        tableView.dataSource = self
        
        searchController.searchResultsUpdater = self
        searchController.obscuresBackgroundDuringPresentation = false
        searchController.searchBar.placeholder = "home_view_controller.searchbar_placeholder".localized
        navigationItem.searchController = searchController
        navigationItem.hidesSearchBarWhenScrolling = false
        definesPresentationContext = true
    }
    
    // MARK: - Initialization
    
    
    // MARK: - Actions
    
}

// MARK: - Extensions

extension HomeViewController: UISearchResultsUpdating {
    
    func updateSearchResults(for searchController: UISearchController) {
        guard let searchText = searchController.searchBar.text else { return }
        
        presenter.searchMovies(searchText)
    }
}

extension HomeViewController: UITableViewDelegate, UITableViewDataSource {
    
    func tableView(_ tableView: UITableView, numberOfRowsInSection section: Int) -> Int {
        switch messageType {
        case .done:
            return movies.count
        default:
            return 1
        }
    }
    
    func tableView(_ tableView: UITableView, cellForRowAt indexPath: IndexPath) -> UITableViewCell {
        let cell = tableView.dequeueReusableCell(withIdentifier: "cell", for: indexPath)
        
        if messageType == .done {
            cell.textLabel?.text = movies[indexPath.row].title
            cell.textLabel?.font = UIFont.systemFont(ofSize: 14)
        } else {
            cell.textLabel?.text = messageType.rawValue.localized
            cell.textLabel?.font = UIFont.systemFont(ofSize: 12)
        }
        return cell
    }
    
    func tableView(_ tableView: UITableView, didSelectRowAt indexPath: IndexPath) {
        if messageType == .done {
            let extras = movies[indexPath.row]
            DetailWireframe().show(transitionType:
                                    .present(fromViewController: self), delegate: nil, extras: extras)
        }
    }
}

// MARK: - Protocol Implemantations

extension HomeViewController: HomeViewControllerProtocol {
    
    func showSearchResult(_ messageType: MessageType, _ result: [Movie]) {
        
        self.movies = result
        self.messageType = messageType
        tableView.reloadData()
    }
}
