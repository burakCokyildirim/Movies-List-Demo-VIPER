//
//  DetailInteractor.swift
//  Movies
//
//  Created by Burak Çokyıldırım on 22.11.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Burak Cokyildirim

import Foundation

class DetailInteractor: BaseInteractor {
    
    // MARK: - Dependencies
    
    var presenter: DetailPresenterInteractorProtocol!
    
    // MARK: - Initialization
    
    override init(networkService: NetworkService? = nil, firebaseService: FirebaseService? = nil) {
        super.init(networkService: networkService, firebaseService: firebaseService)
    }
    
    // MARK: - Business Logic

}

// MARK: - Extensions

// MARK: - Protocols Implemantations

extension DetailInteractor: DetailInteractorProtocol {
    
    func fetchData(imdbID: String) {
        let url = NetworkConstants.omdb.detail + imdbID
        
        networkService.getJSON(url: url) { (json) in
            if !json["Response"].boolValue {
                let errorMessage = json["Error"].stringValue
                let error = ErrorModel(errorMessage: errorMessage, errorType: .error)
                self.presenter.handleAndShowError(errorModel: error)
                return
            }
            
            self.presenter.showMovieDetail(movieDetail: MovieDetail(json: json))
        } failure: { (error) in
            self.presenter.handleAndShowError(errorModel: error)
        }
    }
    
    func logData(movie: Movie) {
        
        firebaseService.logEvent(name: "movie_selection", parameters: [
            "title": movie.title as Any,
            "imdbID": movie.imdbID as Any
        ])
    }
}
