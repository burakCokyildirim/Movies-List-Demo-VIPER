//
//  BasePresenter.swift
//  Movies
//
//  Created by Burak Çokyıldırım on 21.11.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  Template generated by Burak Cokyildirim
//

import Foundation

class BasePresenter {
    
    func handleError(errorModel: ErrorModel, viewController: BaseViewControllerProtocol? = nil, completionHandler: PopupCompletionHandler? = nil) -> Bool {
        if !handleGenericError(errorModel: errorModel, viewController: viewController, completionHandler: completionHandler) {
            return false
        } else {
            if let viewController = viewController {
                viewController.showError(errorModel: errorModel, completionHandler: completionHandler)
                return false
            }
        }
        return true
    }
    
    func handleGenericError(errorModel: ErrorModel, viewController: BaseViewControllerProtocol? = nil, completionHandler: PopupCompletionHandler? = nil) -> Bool {
        if let genericErrorType = errorModel.genericErrorType {
            switch genericErrorType {
            case .reachability:
                if let viewController = viewController {
                    viewController.showReachability(errorModel: errorModel, completionHandler: completionHandler)
                    return false
                }
            default:
                return true
            }
        }
        return true
    }

    func handleAndShowError(errorModel: ErrorModel) {
        fatalError("You must override this method")
    }
}

// MARK: - Extensions

// MARK: - Protocols Implemantations

// MARK: View Protocol

extension BasePresenter: BasePresenterViewProtocol {
    
}

// MARK: Interactor Protocol

extension BasePresenter: BasePresenterInteractorProtocol {
    
}

// MARK: Delegate Protocol

extension BasePresenter: BasePresenterDelegateProtocol {
    
}
